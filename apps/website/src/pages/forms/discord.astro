---
import { SignedIn, SignedOut, SignIn } from '@clerk/astro/components';
import Layout from '../../layouts/default.astro';
import Aside from '../../components/aside.astro';

const url = Astro.url;
url.pathname = '/forms/web-dev-challenge';

const user = await Astro.locals.currentUser();

const discordAcct = user?.externalAccounts.find(
	(acct) => acct.provider === 'oauth_discord',
);
---

<Layout title="Web Dev Challenge Filming Questionnaire">
	<main>
		<SignedIn>
			<section class="wrapper">
        {discordAcct ? (
          <h2>Join the CodeTV Discord</h2>

          <p>
						Last step: click the button below to join the CodeTV Discord (if you 
						haven’t already) to get the Web Dev Challenge Alumni role and badge.
					</p>

					<button type="button" class="button" id="assign-discord-role">
						Join
					</button>

					<Aside>
						<p>
							<strong>NOTE: This step is optional.</strong> If you don’t want to
							join, you can safely close this tab.
						</p>
					</Aside>
        ) : (
          <h2>Connect Your Discord Account</h2>

          <p>
            If you use Discord, you can connect your account to get a "Web Dev 
						Challenge Alumni" role and badge, plus access to a private channel 
						to chat with other alumni.
          </p>

          <button type="button" class="button" id="add-discord">
            Connect Your Discord Account
          </button>

					<Aside>
						<p>
							<strong>NOTE: This step is optional.</strong> If you don’t want to
							join, you can safely close this tab.
						</p>
					</Aside>
        )}
			</section>
		</SignedIn>

		<SignedOut>
			<SignIn forceRedirectUrl={url.toString()} />
		</SignedOut>
	</main>
</Layout>

<script>
	import { Clerk } from '@clerk/clerk-js';
	import { PUBLIC_CLERK_PUBLISHABLE_KEY } from 'astro:env/client';
	import { actions } from 'astro:actions';

	const clerk = new Clerk(PUBLIC_CLERK_PUBLISHABLE_KEY);
	await clerk.load();

  document.getElementById('add-discord')?.addEventListener('click', () => {
		clerk.user
			?.createExternalAccount({
				strategy: 'oauth_discord',
				redirectUrl: '/forms/discord',
			})
			.then((externalAccount) => {
				window.location.href =
					externalAccount.verification?.externalVerificationRedirectURL?.toString() ??
					'';
			})
			.catch((error) => {
				console.log('An error occurred:', error.errors);
			});
	});

	const assignBtn = document.getElementById('assign-discord-role');
	
	assignBtn?.addEventListener('click', async () => {
		const result = await actions.user.addToDiscord();

		if (!result) {
			console.error('Error updating the role');
			return;
		}

		assignBtn.textContent = 'Loading...';
		assignBtn.setAttribute('disabled', 'disabled');

		setTimeout(() => {
			window.location.pathname = '/forms/submitted';
		}, 1500);
	});
</script>

<style>
	main {
		background: var(--black);
		padding: 40px 5cqw 60px;
	}

	.wrapper {
		margin-inline: auto;
		max-inline-size: 54ch;

		@media (min-width: 750px) {
			padding-block-start: 120px;
		}

		p {
			margin-block-start: 16px;
		}
	}
</style>
