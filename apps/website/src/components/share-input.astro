---
export interface Props {
	label: string;
	title: string;
	text: string;
	url: string;
}

const { label, url, title, text } = Astro.props;
---

<share-btn data-title={title} data-text={text} data-url={url}>
	<button class="button">{label}</button>
	<div class="confirmation">copied!</div>
</share-btn>

<script>
	class ShareBtn extends HTMLElement {
		connectedCallback() {
			const shareData = {
				title: this.dataset.title,
				text: this.dataset.text,
				url: this.dataset.url,
			};

			if (!shareData.url) {
				this.style.display = 'none';
				return;
			}

			const button = this.querySelector('button')!;

			button.addEventListener('click', async () => {
				if (navigator.share) {
					try {
						await navigator.share(shareData);
					} catch (err) {
						console.error(`Error: ${err}`);
					}
				} else {
					const confirmation = document.querySelector(
						'.confirmation',
					) as HTMLDivElement;

					await navigator.clipboard.writeText(shareData.url!);

					confirmation.classList.add('clicked');
					setTimeout(() => {
						confirmation.classList.remove('clicked');
					}, 3000);
				}
			});
		}
	}

	customElements.define('share-btn', ShareBtn);
</script>

<style>
	share-btn {
		position: relative;

		.confirmation {
			background: color-mix(in oklch, var(--green-500), var(--white) 35%);
			border: 1px solid var(--green-600);
			border-radius: 0.25rem;
			font-size: 0.75rem;
			inset: 0;
			align-content: center;
			opacity: 0;
			padding: 0.5rem;
			pointer-events: none;
			position: absolute;
			text-align: center;
			transition: all ease-out 500ms;
			z-index: 10;

			&.clicked {
				opacity: 1;
			}
		}
	}
</style>
