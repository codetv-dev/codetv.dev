---
export interface Props {
	title?: string;
	variant?: 'primary' | 'secondary';
}

const { title, variant = 'primary' } = Astro.props;
---

<div class:list={['card', { secondary: variant === 'secondary' }]}>
	<slot name="img" />
	<div class="details">
		<div class="title">{title ? <h3>{title}</h3> : <slot name="title" />}</div>
		<div class="description">
			<slot />
		</div>
	</div>
</div>

<style>
	.card {
		--gap: 4px;

		background: var(--bg);
		border: 0.5px solid color-mix(in oklch, var(--gray-600), transparent);
		border-radius: 3px;
		display: flex;
		flex-direction: column;
		gap: var(--gap);

		.details {
			display: flex;
			flex-direction: column;
			gap: var(--gap);
			padding: 16px;
		}

		&.secondary {
			background: unset;
			border: none;

			.details {
				padding-block: 8px;
			}
		}

		&:has(> img) {
			gap: 16px;

			img {
				border-block-end: 0.5px solid
					color-mix(in oklch, var(--gray-600), transparent);
				border-radius: 3px 3px 0 0;
				max-inline-size: 100%;
			}

			.details {
				padding-block-start: 0;
			}
		}

		.title {
			color: var(--text-emphasized);
			font-size: 1em;
			font-weight: 500;
			line-height: 1.25;
			margin: 0;

			&:empty {
				display: none;
			}

			* {
				color: inherit;
				font-size: inherit;
				font-weight: inherit;
				line-height: inherit;
			}

			:is(h1, h2, h3, h4, h5, h6) {
				font-size: clamp(1em, 3.5cqi, 1.125em);
				line-height: 1.1;
			}

			a {
				color: inherit;
				text-decoration: none;

				&:is(:hover, :active, :hover) {
					text-decoration: underline;
				}
			}
		}

		.description {
			color: var(--text-muted);
			display: flex;
			flex-direction: column;
			gap: var(--gap);
			line-height: 1.25;

			> * {
				color: inherit;
				font-size: inherit;
				line-height: inherit;
				margin: 0;
			}
		}
	}
</style>
