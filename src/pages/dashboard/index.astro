---
import { UserProfile } from '@clerk/astro/components';
import Layout from '../../layouts/default.astro';
import DashboardSupporter from '../../components/dashboard/supporter.astro';
import LinksBio from '../../components/dashboard/links-bio.astro';
import Perks from '../../components/dashboard/perks.astro';
---

<Layout title="Your Dashboard â€” CodeTV">
	<main id="user-profile">
		<UserProfile>
			<UserProfile.Page label="Support" url="support">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 16 16"
					slot="label-icon"
				>
					<path
						fill="currentColor"
						fill-rule="evenodd"
						d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14ZM5.5 5.5c1.064-.183 1.95.251 2.351.521a.312.312 0 0 0 .344 0c.402-.27 1.287-.704 2.351-.521 1.262.217 1.963 2.2.954 3.5-.732.943-2.098 1.951-3 2.5a.91.91 0 0 1-1 0c-.902-.549-2.268-1.557-3-2.5-1.01-1.3-.262-3.283 1-3.5Z"
						clip-rule="evenodd"></path>
				</svg>
				<DashboardSupporter />
			</UserProfile.Page>

			<UserProfile.Page label="Perks" url="perks">
				<svg
					slot="label-icon"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 70 70"
				>
					<g clip-path="url(#a)">
						<path
							fill="currentColor"
							d="M35 0c19.33 0 35 15.67 35 35S54.33 70 35 70 0 54.33 0 35 15.67 0 35 0Zm19.646 16.076a3.89 3.89 0 0 0-5.313 1.424L32.028 47.47l-10.052-8.617-.316-.243a3.89 3.89 0 0 0-5.035 5.875l.288.273 13.611 11.667a3.89 3.89 0 0 0 5.9-1.008L56.07 21.389a3.89 3.89 0 0 0-1.424-5.313Z"
							style="fill:currentColor;fill-opacity:1"></path>
					</g>
					<defs>
						<clipPath id="a">
							<path
								fill="currentColor"
								d="M0 0h70v70H0z"
								style="fill:currentColor;fill-opacity:1"></path>
						</clipPath>
					</defs>
				</svg>

				<Perks />
			</UserProfile.Page>

			<UserProfile.Page label="account" />

			<UserProfile.Page label="Links & Bio" url="links-bio">
				<svg slot="label-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 70 70">
					<g clip-path="url(#a)">
						<path
							fill="currentColor"
							d="M35 0c19.33 0 35 15.67 35 35S54.33 70 35 70 0 54.33 0 35 15.67 0 35 0Zm-6.563 32.366a6 6 0 0 0-8.196 2.197l-7 12.123a6 6 0 0 0 2.197 8.197l12.124 7a6 6 0 0 0 8.197-2.197l7-12.123a6 6 0 0 0-2.197-8.197l-.289-.167-.134-.073a3 3 0 0 0-2.996 5.19l.13.08.29.166-7 12.125-12.125-7 7-12.124.289.165a3 3 0 1 0 3-5.196l-.29-.166ZM41.5 23.741a3 3 0 0 0-4.098 1.099l-10 17.32a3 3 0 0 0 5.196 3l10-17.32A3 3 0 0 0 41.5 23.74Zm.938-15.624a6 6 0 0 0-8.197 2.196l-7 12.124a6 6 0 0 0 2.197 8.197l.289.167.134.073a3 3 0 0 0 2.996-5.19l-.13-.08-.29-.166 7-12.124 12.126 7-7 12.123-.29-.165a3 3 0 1 0-3 5.196l.29.166a6 6 0 0 0 8.196-2.197l7-12.123a6 6 0 0 0-2.197-8.197l-12.124-7Z"
							style="fill:currentColor;fill-opacity:1"></path>
					</g>
					<defs>
						<clipPath id="a">
							<path
								fill="currentColor"
								d="M0 0h70v70H0z"
								style="fill:currentColor;fill-opacity:1"></path>
						</clipPath>
					</defs>
				</svg>
				<LinksBio />
			</UserProfile.Page>

			<UserProfile.Page label="security" />

			<UserProfile.Link label="Log Out" url="/api/sign-out">
				<svg
					slot="label-icon"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 70 70"
				>
					<g clip-path="url(#a)">
						<path
							fill="currentColor"
							d="M35 0c19.33 0 35 15.67 35 35S54.33 70 35 70 0 54.33 0 35 15.67 0 35 0Zm-1 12.5-.335.009a6.5 6.5 0 0 0-6.156 6.156L27.5 19v4a3.5 3.5 0 1 0 7 0v-3.5h15v31h-15V47a3.5 3.5 0 1 0-7 0v4a6.5 6.5 0 0 0 6.5 6.5h16a6.5 6.5 0 0 0 6.5-6.5V19a6.5 6.5 0 0 0-6.5-6.5H34ZM22.092 23.143a3.5 3.5 0 0 0-4.95.058l-8.646 8.854a3.5 3.5 0 0 0 0 4.89l8.647 8.854.128.126a3.5 3.5 0 0 0 5.002-4.885l-.123-.132L19.31 38H40a3.5 3.5 0 1 0 0-7H19.31l2.84-2.908a3.5 3.5 0 0 0-.058-4.95Z"
							style="fill:currentColor;fill-opacity:1"></path>
					</g>
					<defs>
						<clipPath id="a">
							<path
								fill="currentColor"
								d="M0 0h70v70H0z"
								style="fill:currentColor;fill-opacity:1"></path>
						</clipPath>
					</defs>
				</svg>
			</UserProfile.Link>
		</UserProfile>
	</main>
</Layout>

<script>
	function linksBioSetup() {
		// handle removing links
		function addRemoveHandlers() {
			const removeLinkBtns = document.querySelectorAll('.remove-link');
			removeLinkBtns.forEach((btn) => {
				function removeParent(event: Event) {
					event.preventDefault();
					event.stopImmediatePropagation();
					btn.parentElement?.remove();
				}

				btn.removeEventListener('click', removeParent);
				btn.addEventListener('click', removeParent);
			});
		}

		addRemoveHandlers();

		// handle adding additional links
		const linkTemplate = document.querySelector(
			'#link-template',
		) as HTMLTemplateElement;
		const linksContainer = document.querySelector('.links') as HTMLDivElement;
		const addLinkBtn = document.querySelector(
			'#add-profile-link',
		) as HTMLButtonElement;

		function addLink() {
			const link = linkTemplate.content.cloneNode(true);

			linksContainer.appendChild(link);
		}

		addLinkBtn.addEventListener('click', (event) => {
			event.preventDefault();

			addLink();
			addRemoveHandlers();
		});

		// disable form while waiting for update
		const updateProfile = document.querySelector('.update-profile-form');

		updateProfile?.addEventListener('submit', () => {
			updateProfile.classList.add('submitting');
			updateProfile.querySelector('button')?.setAttribute('disabled', 'true');
		});
	}

	function addObserver() {
		const targetNode = document.getElementById('user-profile');

		if (!targetNode) {
			return;
		}

		// Create an observer instance linked to the callback function
		const observer = new MutationObserver((mutationList) => {
			for (const mutation of mutationList) {
				mutation.addedNodes.forEach((node) => {
					if (node.nodeType !== node.ELEMENT_NODE) {
						return;
					}

					const el = node as HTMLElement;
					const btn = el.querySelector('#add-profile-link');
					if (!btn) {
						return;
					}

					linksBioSetup();
				});
			}
		});

		// Start observing the target node for configured mutations
		observer.observe(targetNode, {
			attributes: true,
			childList: true,
			subtree: true,
		});
	}

	addObserver();
</script>

<style>
	main {
		font-size: 0.75rem;
		margin: 0 auto 3rem;
		min-block-size: 90dvb;
		padding-block-start: 40px;

		@media (min-width: 1280px) {
			padding-block-start: 80px;
		}
	}

	.user-info {
		aspect-ratio: 1;
		inline-size: 250px;
		margin-block-end: 4rem;
		margin-inline: auto;

		img {
			block-size: auto;
			border: 1px solid var(--text-muted);
			border-radius: 3px;
			display: block;
			inline-size: 100%;
		}

		.view-profile {
			display: block;
			font-size: 0.625rem;
			font-weight: 400;
			margin-block-start: 0.5rem;
		}

		.name,
		p {
			font-size: 0.75rem;
			text-align: center;

			&.name {
				font-size: 1.25rem;
				font-weight: 500;
				letter-spacing: 0.02em;
				margin-block-start: 1rem;
			}

			&.level {
				background: color-mix(in oklch, var(--green-500) 15%, transparent);
				border: 0.5px solid var(--green-500);
				border-radius: 0.125rem;
				inline-size: max-content;
				margin-block-start: 10px;
				margin-inline: auto;
				padding-inline: 0.25rem;
			}

			&.start-date {
				color: var(--gray-600);
				font-size: 0.675rem;
				font-style: italic;
				margin-block-start: 0.5rem;
			}

			&.cancellation-pending {
				background: color-mix(in oklch, var(--orange-500) 25%, transparent);
				border: 1px solid var(--orange-500);
				border-radius: 0.125rem;
				color: var(--gray-600);
				font-size: 0.625rem;
				font-style: italic;
				margin-block-start: 0.5rem;
				padding: 0.25rem;
			}
		}

		.button {
			background: var(--bg);
			border: 1px solid color-mix(in oklch, var(--text-muted) 25%, transparent);
			color: var(--text-emphasized);
			font-family: var(--font-family);
			font-size: 0.75rem;
			inline-size: 100%;
			margin-block-start: 10px;
			text-align: center;
			transition: background 100ms linear;

			&:is(:hover, :active, :focus) {
				background: color-mix(in oklch, var(--text-muted) 15%, transparent);
			}
		}
	}

	.update-profile {
		background: var(--white);
		border: 1px solid var(--text-muted);
		border-radius: 0.125rem;
		color: var(--text-muted);
		cursor: pointer;
		display: block;
		font-size: 0.625rem;
		font-weight: 400;
		inline-size: 100%;
		margin-block-start: 1rem;
		margin-inline: auto;
		padding: 0.25rem 0.625rem;
		text-align: center;
		text-decoration: none;
		text-transform: lowercase;

		&:is(:hover, :focus, :active) {
			background: var(--gray-100);
		}
	}

	:global(.cl-rootBox) {
		margin-inline: auto;
	}

	.support {
		inline-size: min(90dvi, 660px + 1rem);
		margin: 4rem auto;
		text-align: center;

		h2 {
			font-size: 1.5rem;
		}

		p {
			font-size: 0.875rem;
			font-weight: 200;
			margin-block-start: 0.5rem;
			margin-inline: auto;
			max-inline-size: 54ch;
		}

		h3 {
			font-size: 1.25rem;
			margin-block-start: 2rem;
		}

		.sub-levels {
			display: flex;
			flex-wrap: wrap;
			gap: 0.5rem;
			margin-block-start: 0.5rem;
		}

		.sub-level {
			background: var(--black);
			border: 1px solid color-mix(in oklch, var(--text-muted) 25%, transparent);
			border-radius: 3%;
			display: flex;
			flex-direction: column;
			gap: 10px;
			inline-size: 220px;
			padding: 10px;
			text-align: start;
			transition: 150ms background linear;

			&:has(button:hover, button:active, button:focus) {
				background: color-mix(in oklch, var(--text-muted) 15%, transparent);
			}

			h3 {
				font-size: 0.875rem;
				font-weight: 500;
				line-height: 1.1;
				margin-block: 0;
			}

			p {
				font-size: 0.75rem;
				margin-block: 0;
			}

			form {
				margin-block-start: auto;
			}

			button {
				background: var(--orange); /* color-mix(in oklch, var(--orange)); */
				/* border-color: color-mix(in oklch, var(--text-muted) 15%, transparent); */
				color: var(--black);
				font-size: 0.875rem;
				margin-block-start: 0;
				text-transform: uppercase;
				text-box-trim: trim-both;
				text-spacing-trim: space-all;
				transition: 150ms all linear;

				&:is(:hover, :active, :focus) {
					background: var(--white);
				}
			}
		}

		@media (min-width: 1280px) {
			inline-size: 100%;
			margin-block-start: 0;
			text-align: start;

			p {
				font-size: 1rem;
				margin-inline-start: 0;
				max-inline-size: 60ch;
			}
		}
	}

	.details {
		form {
			inline-size: min(90dvi, 400px);
			margin: 4rem auto;

			legend {
				font-size: 1rem;
				margin: 0 0 0.5rem;
				padding: 0;
			}

			:is(label, input:not([type='checkbox']), textarea, button) {
				display: block;
				inline-size: 100%;
			}

			:is(input:not([type='checkbox']), textarea, button) {
				background: var(--white);
				border: 1px solid var(--text-muted);
				border-radius: 0.125rem;
				font-size: 16px;
				font-weight: 400;
				padding: 0.25rem;
			}

			label {
				margin-block-end: 0.125rem;
			}

			textarea {
				block-size: calc(4 * 1.45rem);
				field-sizing: content;
			}

			:is(input, textarea) {
				color: var(--text);
				margin-block-end: 0.5rem;
			}

			.profile-links {
				margin-block-end: 1.5rem;

				h3 {
					color: var(--text);
					font-weight: 400;
					line-height: 1.1;
					margin-block: 2rem 0.25rem;
				}
			}

			.link {
				align-items: end;
				display: grid;
				grid-template-columns: 120px auto 2rem;
				gap: 0.5rem;
				margin-block-start: 1rem;
			}

			button.remove-link {
				align-items: center;
				border: none;
				border-radius: 50%;
				block-size: 1.875rem;
				display: flex;
				justify-content: center;
				margin-block-end: 0.625rem;

				&:is(:hover, :focus, :active) {
					background: var(--gray-100);
				}
			}

			button[type='submit'] {
				&:is(:hover, :focus, :active) {
					background: var(--yellow-500);
				}
			}
		}

		@media (min-width: 1280px) {
			grid-column-start: 2;

			form {
				inline-size: 100%;
			}
		}
	}

	#add-profile-link {
		border: none;
		color: var(--text-muted);
		text-align: start;
	}

	.update-profile-form {
		position: relative;

		&.submitting {
			opacity: 0.5;

			&::after {
				align-items: center;
				background: color-mix(in oklch, var(--gray-000) 80%, transparent);
				content: 'please wait';
				display: flex;
				flex-direction: row;
				inset: 0;
				justify-content: center;
				position: absolute;
			}
		}
	}
</style>

<style is:global>
	.panel-field {
		border-block-start: 1px solid rgb(255 255 255 / 0.07);
		margin-block-start: 24px;
		padding-block-start: 24px;

		h2 {
			margin: 0;
		}

		@container (min-width: 500px) {
			align-items: first baseline;
			display: grid;
			grid-template-columns: 120px minmax(0, 1fr);
		}
	}

	.field {
		align-items: first baseline;
		display: grid;
		gap: 8px 20px;
		justify-content: space-between;

		@media (min-width: 480px) {
			grid-column-start: 2;
			grid-template-columns: 80px minmax(0, 1fr);
		}
	}

	.field-label {
		display: block;
		margin-block-start: 16px;

		@media (min-width: 480px) {
			margin-block-start: 0;
			text-align: end;
		}
	}

	.field-value {
		color: var(--white);
	}
</style>
