---
import Card from '../components/cards/card.astro';
import type { AllSeriesQueryResult } from '../types/sanity';

export const prerender = true;

export interface Props {
	series: AllSeriesQueryResult;
	short?: boolean;
}

const { series, short = false } = Astro.props;
---

<section class="series-container">
	<div class="series-list">
		{
			series.map((series) => {
				if (!series.image || !series.image.public_id) {
					console.error(`Series "${series.slug}" is missing an image.`);
					return null;
				}

				if (!series.collections || series.collections.length < 1) {
					console.error(`Series "${series.slug}" has no collections.`);
					return null;
				}

				const collection = series.collections.at(0);

				if (!collection || !collection.slug) {
					console.error(`Series "${series.slug}" has an invalid collection.`);
					return null;
				}

				const seasons =
					series.collections.length === 1
						? '1 season'
						: series.collections.length + ' seasons';

				const episodes =
					series.total_episode_count === 1
						? '1 episode'
						: series.total_episode_count + ' episodes';

				return (
					<Card
						image={{
							public_id: series.image.public_id,
							alt: series.title,
						}}
						title={series.title}
						description={series.description}
						link={`/series/${series.slug}/${collection.slug}`}
						linkText="See Episodes"
					>
						<Fragment slot="tagline">
							<p class="season-count">{seasons}</p>
							<p class="episode-count">{episodes}</p>
						</Fragment>
					</Card>
				);
			})
		}
	</div>
	{
		short ? (
			<p class="see-all">
				<a href="/watch" class="button">
					See all series &rarr;
				</a>
			</p>
		) : null
	}
</section>

<style>
	.series-container {
		background: var(--black);
		padding: 32px max((100% - var(--max-width)) / 2, 5%);

		@media (min-width: 800px) {
			padding-block: 64px 120px;
		}
	}

	.series-list {
		display: flex;
		flex-direction: column;
		gap: 2rem;
		margin-block-start: 1rem;

		@media (min-width: 800px) {
			display: grid;
			gap: 20px;
			grid-template-columns: repeat(auto-fit, calc(100% / 3 - 40px / 3));
			justify-content: start;
		}
	}

	.season-count {
		color: var(--text-emphasized);
	}

	.episode-count {
		color: var(--text-muted);
	}

	.see-all {
		margin: 1rem 0 0;
		text-align: center;

		a {
			border: 1px solid var(--gray-600);
			font-size: 0.875rem;
			padding: 0.5rem 0.75rem;
		}
	}
</style>
